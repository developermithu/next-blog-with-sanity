import Head from "next/head";
import Image from "next/image";
import { createClient } from "next-sanity";
import { PortableText } from "@portabletext/react";
import imageUrlBuilder from "@sanity/image-url";

export default function Home({ posts }) {
  const builder = imageUrlBuilder(client);

  function urlFor(source) {
    return builder.image(source);
  }

  const myPortableTextComponents = {
    types: {
      image: ({ value }) => <img src={urlFor(value).url()} />,
    },
  };

  console.log(posts);
  return (
    <div className="text-white">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="text-6xl text-center bg-gray-800 p-3">Posts</div>

      <div className="max-w-5xl mx-auto">
        {posts.map((post) => (
          <div key={post._id} className="p-5 m-10 bg-gray-900">
            <h3 className="text-3xl capitalize">{post.title}</h3>

            {/* Description */}
            <div className="py-5 prose prose-headings:text-white prose-p:text-white prose-blockquote:text-white prose-ul:text-white prose-li:text-white prose-ol:text-white prose-em:text-white prose-a:text-blue-600 hover:prose-a:text-blue-500 prose-a:no-underline">
              <PortableText
                value={post.body}
                components={myPortableTextComponents}
              />
            </div>

            {/* Cover Image */}
            <p>Cover image:</p>
            <img src={urlFor(post.mainImage).width(320).url()} alt="" />

            {/* Author  */}
            <div className="flex items-center gap-x-6">
              <p> Author: {post.author.name} </p>
              <p> Created:{post._createdAt} </p>
              <div className=" relative w-12 h-12">
                <Image
                  src={urlFor(post.author.image).url()}
                  layout="fill"
                  alt=""
                />
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

const client = createClient({
  projectId: "r0riooy5",
  dataset: "production",
  apiVersion: "2022-07-15",
  useCdn: false,
});

export async function getServerSideProps() {
  const posts = await client.fetch(`*[_type == "post"]{
    _id,
    title,
    slug,
    _createdAt,
    body,
    mainImage,
    author->{
        name,
        image
      }, 
  }`);

  return {
    props: {
      posts,
    },
  };
}
